{"version":3,"sources":["components/Wrapper.js","components/Header.js","components/Image.js","App.js","index.js"],"names":["Wrapper","props","className","children","styles","jumbotron","backgroundColor","color","textAlign","h2","fontSize","p","Header","style","score","message","Image","onClick","click","id","alt","name","src","image","App","state","images","reset","setState","shuffle","sort","Math","random","clickHandler","find","any","i","select","console","log","this","map","img","key","Component","ReactDOM","render","document","getElementById"],"mappings":"2rCAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,WCDnCC,EAAS,CACXC,UAAW,CACPC,gBAAiB,UACjBC,MAAO,UACPC,UAAW,UAEfC,GAAI,CACAC,SAAU,OACVH,MAAO,WAEXI,EAAG,CACCD,SAAU,OACVH,MAAO,YAiBAK,MAZf,SAAiBX,GACjB,OACI,yBAAKC,UAAU,aACb,yBAAKA,UAAU,YAAYW,MAAQT,EAAOC,WACxC,4CACA,wBAAIQ,MAAOT,EAAOK,IAAlB,WAA+BR,EAAMa,OACrC,uBAAGD,MAAOT,EAAOO,GAAIV,EAAMc,YCdpBC,MARf,SAAef,GACb,OACM,yBAAKC,UAAU,YAAYe,QAAS,kBAAMhB,EAAMiB,MAAMjB,EAAMkB,MACxD,yBAAKC,IAAKnB,EAAMoB,KAAMC,IAAKrB,EAAMsB,U,OCkE9BC,E,2MA/DbC,MAAQ,CACNC,SACAZ,MAAO,EACPC,QAAS,oF,EAGZY,MAAQ,SAACR,GASN,OARA,EAAKS,SAAS,CAAEb,QAAS,cACzB,EAAKa,SAAS,CAAEd,MAAO,IACvB,EAAKe,WAME,G,EAGXA,QAAS,WACP,EAAKJ,MAAMC,OAAOI,KAAK,kBAAMC,KAAKC,SAAW,M,EAE7CC,aAAe,SAAAd,GACb,EAAKM,MAAMC,OAAOQ,KAAK,SAACC,EAAKC,GAC3B,GAAID,EAAIhB,KAAOA,EAAI,CACjB,IAAyB,IAArBO,EAAOU,GAAGC,OAMZ,OALAX,EAAOU,GAAGC,QAAS,EACnB,EAAKT,SAAS,CAAEd,MAAO,EAAKW,MAAMX,MAAQ,GAAK,WAC7CwB,QAAQC,IAAIC,KAAKf,MAAMX,SAEzB,EAAKe,WACE,EAEP,EAAKF,WAIgB,cAAvB,EAAKF,MAAMV,SACb,EAAKa,SAAS,CAAEb,QAAS,sF,wEAItB,IAAD,OAEN,OACA,kBAAC,EAAD,KACC,kBAAC,EAAD,CACAD,MAAO0B,KAAKf,MAAMX,MAClBC,QAASyB,KAAKf,MAAMV,UACpB,yBAAKb,UAAU,iBACdsC,KAAKf,MAAMC,OAAOe,IAAI,SAAAC,GAAG,OAC1B,kBAAC,EAAD,CACAvB,GAAIuB,EAAIvB,GACRwB,IAAKD,EAAIvB,GACTE,KAAMqB,EAAIrB,KACVE,MAAOmB,EAAInB,MACXL,MAAO,EAAKe,uB,GAzDGW,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c663e870.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\n// remember to use camelCase for CSS within components!\r\nconst styles = {\r\n    jumbotron: {\r\n        backgroundColor: \"#65017e\",\r\n        color: \"#c4c6c7\",\r\n        textAlign: \"center\"\r\n    },\r\n    h2: {\r\n        fontSize: \"28px\",\r\n        color: \"#c4c6c7\"\r\n    },\r\n    p: {\r\n        fontSize: \"24px\",\r\n        color: \"#c4c6c7\"\r\n    }\r\n\r\n};\r\n\r\nfunction Header (props) {\r\nreturn (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron\" style= {styles.jumbotron}>\r\n        <h1>Memory Game!</h1>\r\n        <h2 style={styles.h2}>Points: {props.score}</h2>\r\n        <p style={styles.p}>{props.message}</p>\r\n      </div>\r\n    </div>\r\n        );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\n\r\nfunction Image(props) {\r\n  return (\r\n        <div className=\"img-table\" onClick={() => props.click(props.id)}>\r\n            <img alt={props.name} src={props.image} />\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Image;","import React, { Component } from 'react';\nimport './App.css';\nimport Wrapper from './components/Wrapper';\nimport Header from './components/Header';\nimport Image from './components/Image';\nimport images from \"./images.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    images,\n    score: 0,\n    message: \"Click on an image to earn points, but don't click the same image more than once!\"\n  };\n\n reset = (id) => {\n    this.setState({ message: \"You Lost!\" });\n    this.setState({ score: 0 });\n    this.shuffle();\n    // this.state.images.find((any, i) => {\n    //   if (any.id === id) {\n    //    this.setState(images[i].select = false); \n      //  console.log(select);\n        // }});\n    return true;\n  }\n  \nshuffle= () => {\n  this.state.images.sort(() => Math.random() - 0.5)\n}\n  clickHandler = id => {\n    this.state.images.find((any, i) => {\n      if (any.id === id) {\n        if (images[i].select === false) {\n          images[i].select = true;\n          this.setState({ score: this.state.score + 1 }, function () {\n            console.log(this.state.score);\n          });\n          this.shuffle();\n          return true;\n        } else {\n          this.reset();\n        }\n      }\n    });\n    if (this.state.message === \"You Lost!\") {\n      this.setState({ message: \"Click on an image to earn points, but don't click the same image more than once!\"});\n    }\n  }\n\nrender(){\n  \n  return (\n  <Wrapper>\n   <Header \n   score={this.state.score}\n   message={this.state.message}/>\n   <div className=\"img-container\">\n   {this.state.images.map(img => (\n   <Image\n   id={img.id}\n   key={img.id}\n   name={img.name}\n   image={img.image} \n   click={this.clickHandler}\n   />\n   ))}\n  </div>\n  </Wrapper>\n  );\n}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}